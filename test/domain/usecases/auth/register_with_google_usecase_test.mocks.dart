// Mocks generated by Mockito 5.4.5 from annotations
// in money_mate/test/domain/usecases/auth/register_with_google_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:money_mate/core/errors/auth_failure.dart' as _i6;
import 'package:money_mate/features/authentication/domain/entities/user_entity.dart'
    as _i5;
import 'package:money_mate/features/authentication/domain/repositories/auth_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i5.UserEntity?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i4.Stream<_i5.UserEntity?>.empty(),
      ) as _i4.Stream<_i5.UserEntity?>);

  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>> registerWithEmail(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerWithEmail,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>.value(
                _FakeEither_0<_i6.AuthFailure, _i5.UserEntity>(
          this,
          Invocation.method(
            #registerWithEmail,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>
      registerWithGoogle() => (super.noSuchMethod(
            Invocation.method(
              #registerWithGoogle,
              [],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>.value(
                    _FakeEither_0<_i6.AuthFailure, _i5.UserEntity>(
              this,
              Invocation.method(
                #registerWithGoogle,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, void>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i6.AuthFailure, void>>.value(
            _FakeEither_0<_i6.AuthFailure, void>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i6.AuthFailure, void>>);

  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>
      loginWithEmailPassword(
    String? email,
    String? password,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #loginWithEmailPassword,
              [
                email,
                password,
              ],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>.value(
                    _FakeEither_0<_i6.AuthFailure, _i5.UserEntity>(
              this,
              Invocation.method(
                #loginWithEmailPassword,
                [
                  email,
                  password,
                ],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>> loginWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithGoogle,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>.value(
                _FakeEither_0<_i6.AuthFailure, _i5.UserEntity>(
          this,
          Invocation.method(
            #loginWithGoogle,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i6.AuthFailure, _i5.UserEntity>>);

  @override
  _i4.Future<_i5.UserEntity?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i4.Future<_i5.UserEntity?>.value(),
      ) as _i4.Future<_i5.UserEntity?>);
}
